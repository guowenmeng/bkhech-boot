<?xml version="1.0" encoding="UTF-8"?>

<configuration scan="false">

    <!--定义日志文件的存储地址 勿在 LogBack的配置中使用相对路径 -->
    <property name="app_name" value="bkhech-boot-sample-swagger" />
    <property name="log_home" value="logs"/>

    <!-- 控制台输出 -->
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!-- .%M[%line] 方法和行数-->
            <!--<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M[%line] - %msg%n</pattern>-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 按照每天生成日志文件 -->
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder>
            <!--
                格式化输出：%d表示日期；
                %thread表示线程名；
                %-5level：级别从左显示5个字符宽度；
                %logger{36}：Logger名，通常使用源代码的类名。36表示最大长度；
                %msg：日志消息；
                %n是换行符
            -->
            <pattern>
                %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
            </pattern>
            <charset>UTF-8</charset>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log_home}/${app_name}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!--日志文件最大大小 -->
                <maxFileSize>1024 MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数 -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>debug</level>
        </filter>
        <prudent>true</prudent>
    </appender>

    <!-- 日志输出级别 -->
    <root level="debug">
        <appender-ref ref="stdout"/>
        <appender-ref ref="file" />
    </root>

    <!-- 定义各个包的详细路径，继承root包的值 -->
    <logger name="org.springframework" level="info" />
    <logger name="org.springframework.web" level="off" />
    <logger name="io.lettuce.core" level="info"/>
    <logger name="org.mybatis.spring" level="info"/>

    <!--<springProfile name="pro">
        &lt;!&ndash;定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 &ndash;&gt;
        <property name="LOG_HOME" value="/home" />
        <logger name="org.springboot.sample2" level="INFO" />
    </springProfile>-->

    <!--
        部分说明：
        appender name="STDOUT": 日志打印到控制台

        appender name="FILE"： 日志按日打印到文件中，最多保留MaxHistory天，每个文件大水为MaxFileSize

        encoder：定义输出格式

        <root level="INFO">： 定义根logger，通过appender-ref指定前方定义的appender

        <logger name="com.hry.spring.log" level="INFO" />：在继承root的logger上对com.hry.spring.log包日志作特殊处理

        <springProfile name="dev">： 定义profile的值，只有特定profile的情况下，此间定义的内容才启作用
        application.properties 启动dev配置信息
            server.port=8080
            spring.profiles.active=dev
        spring.profiles.active指定本次启动的active的值是什么。本次是dev，则logback-spring.xml里<springProfile name="dev">的内容启作用


        参考地址：
            http://blog.didispace.com/springbootlog/
            https://juejin.im/post/5c246da5f265da613e224bc3
            https://blog.csdn.net/qq853632587/article/details/78222780
            https://stackoverflow.com/questions/30571319/spring-boot-logging-pattern
            https://www.cnblogs.com/sxdcgaq8080/p/7886251.html
            https://www.cnblogs.com/liaojie970/p/7852140.html
    -->

</configuration>